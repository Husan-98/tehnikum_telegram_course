# - это комментарий к коду
a = ['a','b','c','d']  # Массив ( лист ) с элементами 'a' 'b' 'c' и 'd'
print(a[0])  # Вывод нулевого элемента массива (a). Отсчет в листах начинается с 0. Программа выведет 'a'.
# Если мы хотим добавить элемент в массив - мы используем функцию append
a.append('e')  # Мы добавили элемент 'e' в наш массив
print(a)  # Выводим обновлённый массив. Программа выдаст ['a', 'b', 'c', 'd', 'e']

#########################################################################################

a = ['a',
     ['b', 'c'],
     'd']  # Внутри нашего массива (a) есть ещё 1 массив - ['b', 'c']
# Чтобы программа выдала нам 'b' - нужно вызвать нулевой элемент массива, который является первым элементом массива (a)
print(a[1][0])  # Программа вывела 'b'

##########################################################################################

a = [5, 7, -1, 4, 9]  # (a) - массив с данными типа int() внутри
# Если мы хотим узнать максимально большой ( по значению ) элемент массива - мы используем функцию max
print(max(a))  # Программа выведет 9, так как это самый большой элемент массива
# Если мы хотим узнать минимальный ( по значению ) элемент массива - мы используем функцию min
print(min(a))  # Программа выведет -1, так как это самый минимальный элемент массива
# Если нам нужно взять определённую часть массива - мы используем функцию [x:y] ( 'x' и 'y' принимают любые значения ) 
print(a[1:3])  # Программа выведет массив [7, -1] так как 7 - это первый элемент массива, а -1 второй. Функция [x:y] не включает элемент (y) в массив